[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[project]
# cf. tool.setuptools.package-dir section below
name = "good-idfed-practice"
description = "A \"Good Practice\" approach to identity federation in research and education"
version = "0.0.0"
requires-python = ">=3.10"
# cf. https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Web Environment",
    "Framework :: Sphinx",
    "Intended Audience :: Information Technology",
    "Topic :: Documentation",
]
dependencies = [
]

[project.optional-dependencies]
dev = [
    "autopep8",
    "black",
    "build",
    "flake8",
    "flake8-bugbear",
    "id",
    "isort",
    "jedi",
    "matplotlib",
    "myst-parser[linkify,rtd]",
    "pip-tools",
    "pre-commit",
    "pystemmer",
    "python-semantic-release",
    "sphinx-intl",
    "twine",
    "yapf",
    "yq",
]
test = [
]

[project.readme]
file = "README.md"
content-type = "text/markdown"


[tool.isort]
profile = "black"
skip_gitignore = true


[tool.semantic_release]
assets = []
commit_message = "release: cut the v{version} release\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:project.version",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <releng@irtnog.org>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "docs",
    "feat",
    "fix",
    "perf",
    "refactor",
    "style",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true


[tool.setuptools.package-dir]
good_idfed_practice = "src"
